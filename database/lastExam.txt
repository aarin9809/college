5장 데이터베이스 설계

데이터베이스의 설계 원칙
	- 정확한 모델링을 해야함.
		: 시스템의 요ㅗ구사항을 정확한 조사 후 모델링 되어야 함.
	- 엔티티, 어트리뷰트의 정확한 표현.
		: 어느 엔티티의 어떤 어트리뷰트를 정의할 것인가?
	- NULL 값이 나타나지 않도록 해야함.
		: NULL 값은 많은 문제를 초래함
	-엔티티, 어트리뷰트의 네이밍
		: 엔티티와 어트리뷰트의 유일성
	
데이터베이스의 설계 절차

현실세계 -> 요구사항 수집 및 분석 -> 개념적 설계 -> DBMS의 선택 -> 논리적 설계 -> 물리적 설계 -> 데이터베이스 구축 -> 응용프로그램 구현

개념적 설계에서 ERD 작성, 개념적 설계와 논리적 설계 사이에 DBMS를 선정하게 된다.
물리적 설계까지 끝나고나면 데이터베이스 구축함.

6장 E-R 모델의 구성 요소

E-R 모델의 구성 요소
* 개체 : 업무에 필요하고 유용한 정보를 저장하고 관리하기 위한 집합.
	사람이 생각하는 개념이나 정보 단위와 같은 현실 세계의 대상체
	예) 학생, 과목

* 개체간의 관계 : 두개의 이상의 개체를 연결함
	이항관계, 삼항관계 등
	예) 수강(enrol)

* 개체를 구성하는 속성: 개체(관계)를 기술하는 데이터 항목
	예) 학번, 이름, 학년 등

* 개체와 속성을 연결

네모 : 개체(엔티티)
마름모 : 관계
타원형 : 속성(어트리뷰트)
선 : 연결

매핑 카디널리티: 개체를 연결할 때 개체 내의 원소들간의 관계

다음과 같은 조건의 교수 개체와 학생 개체의 지도관계의 매핑 카디널리티를 결정하고, ERD를 작성하시오.
<조건1> 교수는 지도 학생이 있어야 한다.
		min-card(교수,지도) = 1
<조건2> 교수는 여러명의 학생을 지도할 수 있다.
		max-card(교수,지도) = n
<조건3> 학생은 지도 교수의 지도를 받아야 한다.
		min-card(학생,지도) = 1
<조건4> 학생은 여러 명의 지도 교수를 둘 수 없다.
		max-card(학생,지도) = 1

		교수-------(1,n)-------지도--------(1,1)---------학생

단일값 속성 : 속성 값이 하나의 원자값일때(학과)
다중값 속성 : 속성 값이 여러 개일 때(취미)
복합 속성	: 속성 값이 여러 개의 속성으로 나뉘어질 때(주소)
유도 속성	: 기존 속성값을 이용하여 유도된 속성(나이)

관계 표기법
1. Barker 표기법
2. I/E 표기법

엔티티는 둥근 사각형으로 표시한다.
엔티티 이름은 단수형이고, 유일하며 크게 표기한다.
소괄호안에 동의어 표기 가능하다.
모든 엔티티는 하나 이상의 식별자를 가진다.

어트리뷰트 이름은 작게 표시한다.
엔티티 이름과 어트리뷰트 이름은 다르게 표현한다.
#은 UID, *은 필수, 0은 선택 필드다.
자신의 어트리뷰트가 아니면서 관계를 위해 자신의 어트리뷰트로 표시해서는 안된다.

두 엔티티 사이에 선을 긋고 관계 명칭을 기록한다.
선택 사항을 표시한다.
점선은 maybe를 의미
실선은 must be를 의미
관계 형태를 표시한다.
새발 모양은 하나이상 을 의미함
단선은 하나를 의미함.


